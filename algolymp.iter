2147483647 =INF
0 =NULL

`func_block
#min
	\prev \prev > \swap \ \drop
\

#max
	\prev \prev < \swap \ \drop
\

#lson
	*2 1 |
\

#rson
	*2 2 +
\

`range_block
.read_array
	:n :arr
	0
	\iter
		\copy n == \drop \halt \
		\copy \read {}arr
		++
	\
\

.print_array
	:n :arr
	0
	\iter
		\copy n == \drop \halt \
		\copy []arr \post
		++
	\
\

.fill
	:x :n :arr
	n
	\iter
		\copy ! \halt \
		-- \copy x {}arr
	\
\

.partial_sum
	:ps :n :arr
	0 []arr 0 ps{}
	1
	\iter
		\copy n == \halt \
		\copy []arr \prev -- []ps + \prev ps{}
		++ 
	\
\

.reverse
	:n :arr
	0
	\iter
		\copy n /2 == \drop \back \
		n -- \prev - []arr
		n -- \prew - \prew []arr {}arr
		\prev arr{}
		++
	\
\

.bubble_sort
	:n :arr
	0
	\iter
		\copy n -- == \drop \halt \
		0 :j
		\iter
			n \prev - -- j == \halt \
			j []arr j ++ []arr >
				arr j -> \copy 1 -> <->
			\
			j ++ =j
		\
		++
	\
\

#__merge_arr \copy i []arr {}. 1 -> i ++ =i \
#__merge_brr \copy j []brr {}. 1 -> j ++ =j \

.merge
	:crr :m :brr :n :arr
	0 :i 0 :j
	crr
	\iter
		i n == j m == \drop \back \ \
		i n == \__merge_brr \jump \
		j m == \__merge_arr \jump \
		i []arr j []brr < \__merge_arr \jump \
		\__merge_brr
	\
\

.__merge_sort
	:r :l :arr
	r l - 6 <
		arr l -> r l - ()bubble_sort \back
	\
	l r + /2 :mid
	arr l mid ()__merge_sort
	arr mid r ()__merge_sort
	r l - \copy $ :brr
	arr l -> mid l - arr mid -> r mid - brr ()merge
	brr arr l -> \mcpy
	brr \free
\

.merge_sort
	:n :arr
	arr 0 n ()__merge_sort
\

`search_block
.find
	:x :n :arr
	0
	\iter
		\copy n == \back \
		\copy []arr x == \back \
		++
	\
\

.lower_bound
	:x :n :arr
	-1 :l n :r
	\iter
		r l - -- ! r \back \
		l r + /2 :mid
		mid []arr x < mid :l \
		\else mid :r \
	\
\

.upper_bound
	:x :n :arr
	-1 :l n :r
	\iter
		r l - -- ! r \back \
		l r + /2 :mid
		mid []arr x <= mid :l \
		\else mid :r \
	\
\

.count
	:x :n :arr
	0
	\iter
		n ! \halt \
		n -- =n
		n []arr x == ++ \
	\
\

.accumulate
	:n :arr
	0
	\iter
		n ! \halt \
		n -- :n
		n []arr +
	\
\

.min_element
	:n :arr
	INF
	\iter
		n ! \halt \
		n -- :n
		n []arr \min
	\
\

.max_element
	:n :arr
	-INF
	\iter
		n ! \halt \
		n -- :n
		n []arr \max
	\
\

`numeric_block
.gcd
	:b :a
	\iter
		b ! \halt \
		a b % b :a :b
	\
	a
\

.pow_mod
	:m :n :a
	n ! 1 \back \
	a n /2 m ()pow_mod \copy m *%
	n 1 & ? a m *% \
\
